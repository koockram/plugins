plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'jacoco'
	id 'com.github.sherter.google-java-format' version '0.9'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	set('springCloudVersion', "Hoxton.SR8")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.mapstruct:mapstruct:1.3.1.Final'
	implementation 'org.apache.avro:avro:1.8.2'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'org.apache.commons:commons-lang3'
	implementation 'com.ibm.mq:com.ibm.mq.allclient:9.0.4.0'
	implementation 'javax.jms:javax.jms-api:2.0.1'
	implementation 'com.ibm.mq:mq-jms-spring-boot-starter:2.3.5'
	implementation 'com.oracle.database.jdbc:ojdbc10:19.8.0.0'
        implementation 'net.logstash.logback:logstash-logback-encoder:6.6'
        implementation 'ch.qos.logback:logback-classic:1.2.3'
        implementation 'co.elastic.apm:apm-agent-api:1.18.1'
        implementation 'co.elastic.apm:apm-opentracing:1.18.1'
 	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.apache.tomcat:tomcat-jdbc'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation "com.intuit.karate:karate-junit5:0.9.6"
	testImplementation "com.intuit.karate:karate-apache:0.9.6"

	testImplementation 'org.apache.poi:poi:4.1.2'
	testImplementation 'org.apache.poi:poi-ooxml:4.1.2'
	testImplementation 'org.apache.pdfbox:pdfbox:2.0.8'
	testImplementation 'org.json:json:20160810'
	testImplementation 'commons-dbutils:commons-dbutils:1.6'
	testImplementation 'net.sourceforge.jtds:jtds:1.3.1'
	testImplementation 'com.github.tomakehurst:wiremock-standalone:2.23.2'
	testImplementation 'io.confluent:kafka-avro-serializer:5.5.0'
	testImplementation 'net.masterthought:cucumber-reporting:5.3.0'
	testImplementation 'org.seleniumhq.selenium:selenium-java:3.141.59'
	testImplementation 'io.github.bonigarcia:webdrivermanager:4.0.0'
	testImplementation 'com.google.com.p.expect4j:expect4j:1.0'
	testImplementation 'com.jcraft:jsch:0.1.55'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
